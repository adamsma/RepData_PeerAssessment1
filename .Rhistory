?match
match(a,b)
1:10 %in% c(1,3,5,9)
a %in% b
a[a %in% b]
a
?%in%
?in
?'in'
b %in% a
b
b = c(1,4)
a[a %in% b]
b
b = c(1,4,87)
a[a %in% b]
b = c(1,4,87,99)
a[a %in% b]
?kmeans
installed.packages()
j <- installed.packages
j <- installed.packages()
str(j)
install.packages("GA")
install.packages("adagio")
725*725*5756
725*725*575
?rep
h <- array(rep.int(0, 725*725*575), dim = c(725,725,575))
7.2*7.2*5.7
7.25*7.25*5.75
7.25*7.25*5.7
72*72*57
725*725*57
725*725*575
72*72*575
?sum
h <- array(data = 0, dim = c(782,782,57))
sum(h)
h[2, 193, 83] = 5
h[2, 193, 55] = 5
sum(h)
sum(!h)
h <- array(data = 0, dim = c(782,782,57))
sum(!h)
7.82*7.82*57
7.82*7.82*5.7
sum(!h)/10^5
?power.t.test
?z.test
bline = c(140, 138, 150, 148, 135)
fllUp  =c(132, 135, 151, 146, 130)
t.test(bline, fllUp, paired = TRUE)
?pt
1100+ c(-1,1)*qt(0.975, df = 8, lower.tail = FALSE)
1100+ c(-1,1)*qt(0.975, df = 8, lower.tail = TRUE)
1100+ c(-1,1)*qt(0.975, df = 8, lower.tail = TRUE)*30
ans <- round(pbinom(2, prob = .5, size = 4, lower.tail = FALSE),2)
anns
ans
ppois(10 - 1, lambda = 1 * 1787/100, lower.tail = FALSE)
1-ppois(10 - 1, lambda = 1 * 1787/100, lower.tail = FALSE)
ppois(10 - 1, lambda = 1 * 1787/100, lower.tail = TRUE)
ppois(10, lambda = 1 * 1787/100, lower.tail = TRUE)
muTreat = -3
muP = 1
sdTreat = 1.8
sdP = 1.8
sdTreat = 1.5
sp = sqrt((8*sdTreat + 8*sdP)/16)
-4 + c(-1, 1)*qt(0.975, df = 16)*sp*sqrt(2/9)
dnorm(1.645)
pnorm(1.645)
pt(-4/sp,16)
?qnorm
qnorm(0.95, mean = 0, sd = 0.04)
1.645*.04
rjVal <- qnorm(0.95, mean = 0, sd = 0.04)
alpha = 0.05
z = qnorm(1 - alpha)
pnorm(mu0 + z * 0.04/sqrt(100), mean = 0.01, sd = 0.04/sqrt(100), lower.tail = FALSE)
alpha = 0.05
z = qnorm(1 - alpha)
pnorm(0 + z * 0.04/sqrt(100), mean = 0.01, sd = 0.04/sqrt(100), lower.tail = FALSE)
alpha = 0.05
z = qnorm(1 - alpha)
pnorm(rjVal, mean = 0.01, sd = 0.04/sqrt(100), lower.tail = FALSE)
rjVal <- qnorm(0.95, mean = 0, sd = 0.04/sqrt(100))
alpha = 0.05
z = qnorm(1 - alpha)
pnorm(rjVal, mean = 0.01, sd = 0.04/sqrt(100), lower.tail = FALSE)
pnorm(0 + z * 0.04/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 140
pnorm(0 + z * 0.04/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 180
pnorm(0 + z * 0.04/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
n = 120
pnorm(0 + z * 0.04/sqrt(n), mean = 0.01, sd = 0.04/sqrt(n), lower.tail = FALSE)
round(pbinom(3, prob = .5, size = 4, lower.tail = FALSE),2)
1100+ c(-1,1)*qt(0.975, df = 8, lower.tail = TRUE)*30/sqrt(9)
setwd("~/Edumacation/MOOC/Data Scientist Path/Reproducible Research/Project 1/RepData_PeerAssessment1")
daySums <- tbl_df(actData[,1:2]) %>%
group_by(date) %>%
summarise_each(funs(sum))
hist(daySums$steps, main = "Total Daily # of Steps Taken", xlab = "Steps")
actData <- read.csv("activity.csv", header = TRUE, stringsAsFactors = FALSE)
actData <-  actData <- transform(actData, date = as.Date(date, "%Y-%m-%d"))
library(dplyr)
daySums <- tbl_df(actData[,1:2]) %>%
group_by(date) %>%
summarise_each(funs(sum))
hist(daySums$steps, main = "Total Daily # of Steps Taken", xlab = "Steps")
str(actData)
?plot
intvMeans <- tbl_df(actData[,1:2]) %>%
group_by(interval) %>%
summarise_each(funs(mean))
plot(intvMeans$steps, type = "l", main = "Average Steps by Interval", ylab = "Mean Steps", xlab = "Interval")
?funs
intvMeans <- tbl_df(actData[,1:2]) %>%
+     group_by(interval)
intvMeans <- tbl_df(actData[,1:2]) %>%
+     group_by(as.factor(interval))
intvMeans <- tbl_df(actData[,1:2]) %>%
+     group_by(as.factor(actData$interval))
intvMeans <- tbl_df(actData[,-2]) %>%
group_by(interval) %>%
summarise_each(funs(mean))
plot(intvMeans$steps, type = "l", main = "Average Steps by Interval", ylab = "Mean Steps", xlab = "Interval")
head(intvMeans)
?summarise_each
?mean
intvMeans <- tbl_df(actData[,-2]) %>%
group_by(interval) %>%
summarise_each(funs(mean(na.rm = TRUE)))
intvMeans <- tbl_df(actData[,-2]) %>%
group_by(interval) %>%
summarise_each(funs(mean), na.rm = TRUE)
head(intvMeans)
?summarise_each
intvMeans <- tbl_df(actData[,-2]) %>%
group_by(interval) %>%
summarise_each(funs(mnNA = mean(., na.rm = TRUE))
)
head(intvMeans)
?sum
daySums <- tbl_df(actData[,1:2]) %>%
group_by(date) %>%
summarise_each(funs(sumNA = sum(., na.rm = TRUE))
hist(daySums$steps, main = "Total Daily # of Steps Taken", xlab = "Steps")
daySums <- tbl_df(actData[,1:2]) %>%
group_by(date) %>%
summarise_each(funs(sumNA = sum(., na.rm = TRUE)))
hist(daySums$steps, main = "Total Daily # of Steps Taken", xlab = "Steps")
intvMeans <- tbl_df(actData[,-2]) %>%
group_by(interval) %>%
summarise_each(funs(mnNA = mean(., na.rm = TRUE)))
plot(intvMeans$steps, type = "l", main = "Average Steps by Interval", ylab = "Mean Steps", xlab = "Interval")
intvMeans["steps" = max(intvMeans$steps),]
intvMeans["steps" == max(intvMeans$steps),]
max(intvMeans$steps)
intvMeans[intvMeans$steps == max(intvMeans$steps),]
daySums
sum(is.na(actData$steps))
2304/17568
?which
?%in%
?'%in%'
test <- intvMeans[ actData[naVals, "interval"] %in% intvMeans$intevral, "steps"]
naVals <- is.na(actData$steps)
test <- intvMeans[ actData[naVals, "interval"] %in% intvMeans$intevral, "steps"]
test <- actData[naVals, "interval"] %in% intvMeans$intevral
test <- transform(actData[naVals, ], steps = intvMeans[interval == intvMeans$interval] )
test <- transform(actData[naVals, ], steps = intvMeans[interval == intvMeans$interval, "steps"] )
str(test)
head(test)
actDataImp <- actData
actImp[naVals, ] <- transform(actData[naVals, ], steps = intvMeans[interval == intvMeans$interval, "steps"] )
actDataImp[naVals, ] <- transform(actData[naVals, ], steps = intvMeans[interval == intvMeans$interval, "steps"] )
head(actDataImp)
sum(is.na(actDataImp$steps))
sum(is.na(intvMeans))
sum(~naVals)
sum(!naVals)
sum(is.na(test))
head(test[is.na(test$steps)])
head(test[is.na(test$steps),])
?merge
?replace
?merge
test2 <- merge(actDataImp[naVals, "interval"], intvMeans)
head(test2)
head(actDataImp[naVals, "interval"])
head(intvMeans)
head(actDataImp)
test2 <- merge(intvMeans, actDataImp[naVals, 2:3])
sum(is.na(test2))
head(test2)
actDataImp <- actData
actDataImp[naVals, ] <- merge(intvMeans, actDataImp[naVals, 2:3])
?rm
rm(list = ls())
actData <- read.csv("activity.csv", header = TRUE, stringsAsFactors = FALSE)
actData <-  actData <- transform(actData, date = as.Date(date, "%Y-%m-%d"))
library(dplyr)
daySums <- tbl_df(actData[,1:2]) %>%
group_by(date) %>%
summarise_each(funs(sumNA = sum(., na.rm = TRUE)))
intvMeans <- tbl_df(actData[,-2]) %>%
group_by(interval) %>%
summarise_each(funs(mnNA = mean(., na.rm = TRUE)))
naVals <- is.na(actData$steps)
sum(naVals)
actDataImp <- actData
actDataImp[naVals, ] <- merge(intvMeans, actDataImp[naVals, 2:3])
test <- merge(intvMeans, actDataImp[naVals, 2:3])
str(actDataImp[naVals, ])
str(test)
test <- merge(actDataImp[naVals, 2:3], intvMeans)
str(test)
str(test[,c("steps", "date", "interval")])
actDataImp[naVals, c("interval", "steps", "date"] <- merge(intvMeans, actDataImp[naVals, 2:3])
actDataImp[naVals, c("interval", "steps", "date")] <- merge(intvMeans, actDataImp[naVals, 2:3])
sum(is.na(actDataImp))
head(actDataImp)
head(actData)
actDataImp[2300:2310]
actDataImp[2300:2310,]
head(test)
head(actData)
actDataImp <- actData
actDataImp[naVals, ] <- merge(intvMeans, actDataImp[naVals, 2:3])[,c("steps", "date", "interval")]
head(actDataImp)
?sort
?order
impVals <- merge(intvMeans, actDataImp[naVals, 2:3])[,c("steps", "date", "interval")]
head(impVals[, order(impVals$date, impVals$interval)], 15)
head(impVals[order(impVals$date, impVals$interval),], 15)
actDataImp[naVals, ] <- impVals[order(impVals$date, impVals$interval),]
head(actDataImp)
head(actDataImp,20)
actDataImp[2300:2310]
actDataImp[2300:2310,]
actData[10:14,]
actData <- read.csv("activity.csv", header = TRUE, stringsAsFactors = FALSE)
actData[10:14,]
actData[2310:2325,]
count(unique(actData$interval))
?ct
?n
n(unique(actData$interval))
?unique
length(actData$interval)
length(unique(actData$interval))
max(actData$interval))
max(actData$interval)
unique(actData$interval)
actData <-  actData <- transform(actData, date = as.Date(date, "%Y-%m-%d"))
head(actDataImp, 20)
actDataImp[280:295]
actDataImp[280:295,]
?merge
impVals <- merge(intvMeans, actDataImp[naVals, 2:3], sort =FALSE)[,c("steps", "date", "interval")]
head(impVals)
head(actDataImp, 20)
impDaySums <- tbl_df(actData[,1:2]) %>%
group_by(date) %>%
summarise_each(funs(sumNA = sum(., na.rm = TRUE)))
hist(impDaySums$steps, main = "Total Daily # of Steps Taken", xlab = "Steps")
mean(impDaySums$steps, na.rm = TRUE)
median(impDaySums$steps, na.rm = TRUE)
mean(daySums$steps, na.rm = TRUE)
median(daySums$steps, na.rm = TRUE)
max(impVals$steps)
2304/17658
mean(impDaySums$steps)
median(impDaySums$steps)
impDaySums <- tbl_df(actDataImp[,1:2]) %>%
group_by(date) %>%
summarise_each(funs(sumNA = sum(., na.rm = TRUE)))
hist(impDaySums$steps, main = "Total Daily # of Steps Taken", xlab = "Steps")
mean(impDaySums$steps)
median(impDaySums$steps)
mean(daySums$steps, na.rm = TRUE)
median(daySums$steps, na.rm = TRUE)
mean(impVals$steps)
?weekday
?weekdays
weekdays(actDataImp[1,"date"])
?transform
actDataImp <- transform(actDataImp, day = weekdays(date))
head(actDataIMp)
head(actDataImp)
class(actDataImp$day)
test <- transform(actDataImp, day = weekdays(date)) %>%
transform(weekday = factor(ifelse(day == "Sat" || day == "Sun", "weekend", "weekday")))
head(test)
test[288*5:288*5+10,]
test[(288*5):(288*5+10),]
actDataImp <- transform(actDataImp, day = weekdays(date)) %>%
transform(weekday = factor(ifelse(day == "Saturday" || day == "Sunday", "weekend", "weekday")))
test[(288*5):(288*5+10),]
test[1441, "day"] == "Saturday"
test[1441, "day"] == "Saturday" || test[1441, "day"] == "Sunday"
ifelse(test[1441, "day"] == "Saturday" || test[1441, "day"] == "Sunday","weekend", "weekday")
factor(ifelse(test[1441, "day"] == "Saturday" || test[1441, "day"] == "Sunday","weekend", "weekday"))
as.factor(ifelse(test[1441, "day"] == "Saturday" || test[1441, "day"] == "Sunday","weekend", "weekday"))
test <- <- transform(actDataImp, day = weekdays(date)) %>%
transform(weekday = ifelse(day == "Sat" || day == "Sun", "weekend", "weekday"))
test <- transform(actDataImp, day = weekdays(date)) %>%
transform(weekday = ifelse(day == "Sat" || day == "Sun", "weekend", "weekday"))
head(test)
class(test$weekday)
test[1441,]
test transform(actDataImp, day = weekdays(date)) %>%
transform(weekday = ifelse(day == "Saturday" || day == "Sunday", "weekend", "weekday"))
test <- transform(actDataImp, day = weekdays(date)) %>%
transform(weekday = ifelse(day == "Saturday" || day == "Sunday", "weekend", "weekday"))
test[1441,]
day <- test[1441,"day"]
ifelse(day == "Saturday" || day == "Sunday", "weekend", "weekday")
test <- transform(actDataImp, day = weekdays(date))
test <- transform(actDataImp, weekday = ifelse(day == "Saturday" || day == "Sunday", "weekend", "weekday"))
test[1441,]
test <- transform(actDataImp, day = as.character(weekdays(date))) %>%
transform(weekday = ifelse(day == "Saturday" || day == "Sunday", "weekend", "weekday"))
test[1441,]
str(test)
unique(test$weekday)
day <- test[1441, day]
ifelse(day == "Saturday" || day == "Sunday", "weekend", "weekday")
day <- test[1441, "day"]
ifelse(day == "Saturday" || day == "Sunday", "weekend", "weekday")
<- transform(actDataImp, day = weekdays(date)) %>%
transform(weekday = ifelse(test$day == "Saturday" || test$day == "Sunday", "weekend", "weekday"))
test<- transform(actDataImp, day = weekdays(date)) %>%
transform(weekday = ifelse(test$day == "Saturday" || test$day == "Sunday", "weekend", "weekday"))
str(test)
unique(test$weekday)
test2 <- ifelse(test$day == "Saturday" || test$day == "Sunday", "weekend", "weekday"))
test2 <- ifelse(test$day == "Saturday" || test$day == "Sunday", "weekend", "weekday")
c(1,2,3) == 3
test <- transform(actDataImp, day = as.character(weekdays(date))) %>%
transform(weekday = (day == "Saturday" || day == "Sunday"))
unique(test$weekday)
test <- transform(actDataImp, day = as.character(weekdays(date)),
weekday = (day == "Saturday" || day == "Sunday"))
unique(test$weekday)
test <-<- transform(actDataImp, day = weekdays(date),
weekday = (day == "Saturday" || day == "Sunday"))
test <- transform(actDataImp, day = weekdays(date),
weekday = (day == "Saturday" || day == "Sunday"))
uniqe(test$day)
unique(test$day)
unique(test$weekda)
unique(test$weekday)
test <- transform(actDataImp, day = weekdays(date),
weekday = (day == "Saturday")
)
unique(test$weekday)
?or
?'||'
test <- transform(actDataImp, day = weekdays(date),
weekday = (day == "Saturday") || (day == "Sunday"))
unique(test$weekday)
test <- transform(actDataImp, day = weekdays(date),
weekday = function(x) (x == "Saturday") || (x == "Sunday"))
test <- transform(actDataImp, day = weekdays(date),
weekday = function(x = day) (x == "Saturday") || (x == "Sunday"))
th <- function(x) (x == "Saturday") || (x == "Sunday")
th("Saturday")
th("MOnday")
th("Sunday")
deter <- function(x) ifelse((x == "Saturday") || (x == "Sunday"), "weekend", "weekday")
deter("Sunday")
deter("Saturday")
deter("Monday
")
deter <- function(x) ifelse((x == "Saturday") || (x == "Sunday"), "weekend", "weekday")
actDataImp <- transform(actDataImp, day = weekdays(date),
weekday = deter(day))
unique(actDataImp$weekday)
unique(actDataImp$day)
deter(unique(actDataImp$day))
deter <- function(x) (x == "Saturday") || (x == "Sunday")
deter(unique(actDataImp$day))
deter <- function(x) (x == "Saturday")
deter(unique(actDataImp$day))
s1 <- deter(unique(actDataImp$day))
deter <- function(x) (x == "Sunday")
s2 <- deter(unique(actDataImp$day))
s2
s1 || s2
s1 | s2
deter <- function(x) (x == "Saturday") | (x == "Sunday")
actDataImp <- transform(actDataImp, day = weekdays(date),
weekday = deter(day))
unique(actDataImp$weekday)
actDataImp[1441,]
actDataImp[(1441+288),]
head(actDataIMp)
head(actDataImp)
deter <- function(x) ifelse((x == "Saturday") | (x == "Sunday"), "weekend", "weekday")
actDataImp <- transform(actDataImp, day = weekdays(date),
weekday = deter(day))
actDataImp[(1441+288),]
actDataImp[1441,]
head(actDataImp)
actDataImp <- transform(actDataImp, day = weekdays(date),
weekday = ifelse((x == "Saturday") | (x == "Sunday"), "weekend", "weekday"))
actDataImp <- transform(actDataImp, day = weekdays(date),
weekday = ifelse((day == "Saturday") | (day == "Sunday"), "weekend", "weekday"))
unique(actDataImp$weekday)
str(actDataImp)
actDataImp <- actData
impVals <- merge(intvMeans, actDataImp[naVals, 2:3])[,c("steps", "date", "interval")]
actDataImp[naVals, ] <- impVals[order(impVals$date, impVals$interval),]
actDataImp <- transform(actDataImp, day = weekdays(date),
weekday = ifelse((day == "Saturday") | (day == "Sunday"), "weekend", "weekday"))
str(actDataImp)
actDataImp <- actData
impVals <- merge(intvMeans, actDataImp[naVals, 2:3])[,c("steps", "date", "interval")]
actDataImp[naVals, ] <- impVals[order(impVals$date, impVals$interval),]
test <- transform(actDataImp, day = weekdays(date),
weekday = ifelse((as.character(day) == "Saturday") |
(as.character(day) == "Sunday"), "weekend", "weekday"))
str(test)
head(test)
day = test[1,]
day = test[1, "day"]
day
unique(test$day)
ifelse((as.character(day) == "Saturday") |
(as.character(day) == "Sunday"), "weekend", "weekday"))
ifelse((as.character(day) == "Saturday") |
(as.character(day) == "Sunday"), "weekend", "weekday")
s1 <- ifelse((as.character(test$day) == "Saturday") |
(as.character(test$day) == "Sunday"), "weekend", "weekday"))
s1 <- ifelse((as.character(test$day) == "Saturday") |
(as.character(test$day) == "Sunday"), "weekend", "weekday")
unique(s1)
unqiue(test$weekday)
unique(test$weekday)
str(actDataImp)
test <- transform(actDataImp, day = weekdays(date),
weekday = ifelse((as.character(day) == "Saturday") |
(as.character(day) == "Sunday"), "weekend", "weekday"))
str(test)
test <- transform(actDataImp, day = weekdays(date),
weekday = ifelse((as.character(day) == "Saturday") |
(as.character(day) == "Sunday"), "weekend", "weekday"))
str(test)
test <- transform(actDataImp, day = weekdays(date),
weekday = ifelse((as.character(day) == "Saturday") ||
(as.character(day) == "Sunday"), "weekend", "weekday"))
str(test)
test <- transform(actDataImp, day = weekdays(date),
weekday = ifelse((as.character(day) == "Saturday") | (as.character(day) == "Sunday"), "weekend", "weekday"))
str(test)
test[1441,]
test <- transform(actDataImp, day = as.character(weekdays(date)),
weekday = ifelse((day == "Saturday") | (day == "Sunday"), "weekend", "weekday"))
str(test)
?weekdays
test[1,]
test[1,"day"]
as.character(test[1,"day"])
test <- transform(test, day = as.character(day))
str(tes)
str(test)
unique(test$day)
test <- transform(actDataImp, day = as.character(weekdays(date)))
test
str(test)
test$day[1] == "Monday"
s1 <- test$day == "Saturday" | test == "Sunday"
s1 <- test$day == "Saturday" | test$day == "Sunday"
sum(s1)
unique(s1)
s1[1441]
actDataImp <- actData
impVals <- merge(intvMeans, actDataImp[naVals, 2:3])[,c("steps", "date", "interval")]
actDataImp[naVals, ] <- impVals[order(impVals$date, impVals$interval),]
test <- transform(actDataImp, day =weekdays(date),
weekday = (day == "Saturday") | (day == "Sunday"))
test[1441,]
test <- transform(actDataImp, day =weekdays(date))
str(test)
test <- transform(test, wkday = ( (day =="Saturday") | (day == "Sunday") ) )
str(test)
sum(wkday)
sum(test$wkday)
test[1441,]
test <- transform(actDataImp, day =weekdays(date),
weekday = ( (day == "Saturday") | (day == "Sunday") ) )
str(test)
test[1441,]
test <- transform(actDataImp, day =weekdays(date),
wkday = ( (day == "Saturday") | (day == "Sunday") ) )
test[1441,]
test <- transform(actDataImp, day =weekdays(date))
test <- transform(test, weekday = ( (day == "Saturday") | (day == "Sunday") ) )
test[1441,]
test <- transform(actDataImp, day =weekdays(date))
test <- transform(test, weekday = ifelse( (day == "Saturday")
| (day == "Sunday"), "Weekend", "Weekday ) )
)
s1 <- ifelse( (test$day == "Saturday")
| (test$day == "Sunday"), "Weekend", "Weekday ) )
ifelse( (day == "Saturday")
| (day == "Sunday"), "Weekend", "Weekday )
ifelse( (day == "Saturday") | (day == "Sunday"), "Weekend", "Weekday )
